// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flow: $Exact flow utility type 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "foo",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "kind": "object",
            "members": Array [
              Object {
                "key": Object {
                  "kind": "id",
                  "name": "bar",
                },
                "kind": "property",
                "optional": false,
                "value": Object {
                  "kind": "string",
                },
              },
            ],
            "referenceIdName": "BaseProps",
          },
        },
      },
      Object {
        "default": Object {
          "kind": "boolean",
          "value": false,
        },
        "key": Object {
          "kind": "id",
          "name": "isDefaultChecked",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: Assignment Pattern 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "async": false,
        "generator": false,
        "id": null,
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "assignmentPattern",
              "left": Object {
                "kind": "id",
                "name": "b",
                "type": null,
              },
              "right": Object {
                "kind": "number",
                "value": 3,
              },
            },
          },
        ],
        "returnType": Object {
          "kind": "number",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "number",
            },
          },
        ],
        "returnType": Object {
          "kind": "number",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: BooleanLiteralTypeAnnotation 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "string",
            },
          },
        ],
        "returnType": Object {
          "kind": "boolean",
          "value": true,
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: LogicalExpression and 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "logicalExpression",
        "left": Object {
          "kind": "boolean",
          "value": true,
        },
        "operator": "&&",
        "right": Object {
          "kind": "string",
          "value": "something",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "and",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Button",
    "type": null,
  },
}
`;

exports[`Flow: LogicalExpression or 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "logicalExpression",
        "left": Object {
          "kind": "string",
          "value": "me",
        },
        "operator": "||",
        "right": Object {
          "kind": "string",
          "value": "you",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "or",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Button",
    "type": null,
  },
}
`;

exports[`Flow: LogicalExpression or complicated 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "logicalExpression",
        "left": Object {
          "kind": "logicalExpression",
          "left": Object {
            "kind": "string",
            "value": "me",
          },
          "operator": "||",
          "right": Object {
            "kind": "string",
            "value": "you",
          },
        },
        "operator": "||",
        "right": Object {
          "kind": "logicalExpression",
          "left": Object {
            "kind": "string",
            "value": "someone else",
          },
          "operator": "&&",
          "right": Object {
            "kind": "string",
            "value": "impossible state",
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "or",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Button",
    "type": null,
  },
}
`;

exports[`Flow: NullLiteralTypeAnnotation 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "null",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: OpaqueType test 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": true,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "kind": "id",
            "name": "SomethingId",
          },
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: React.forwardRef 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: React.memo 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: Should handle ArrayTypeAnnotations 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "arrayType",
        "type": Object {
          "kind": "number",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: Should handle importing JSON files 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "importKind": "value",
        "kind": "import",
        "moduleSpecifier": "./__fixtures__/test",
        "name": "name",
        "referenceIdName": "name",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: Should handle rest element 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "async": false,
        "generator": false,
        "id": null,
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "objectPattern",
              "members": Array [
                Object {
                  "key": Object {
                    "kind": "id",
                    "name": "a",
                    "type": null,
                  },
                  "kind": "property",
                  "value": Object {
                    "kind": "id",
                    "name": "a",
                    "type": null,
                  },
                },
                Object {
                  "argument": Object {
                    "kind": "id",
                    "name": "restOfThis",
                    "type": null,
                  },
                  "kind": "rest",
                },
              ],
            },
          },
        ],
        "returnType": null,
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "void",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: TypeCastExpression 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "expression": Object {
            "kind": "id",
            "name": "ascii",
            "type": null,
          },
          "kind": "typeCastExpression",
        },
        "key": Object {
          "kind": "id",
          "name": "bar",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: any 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "age",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "any",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: array 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "typeParams": Object {
          "kind": "typeParams",
          "params": Array [
            Object {
              "kind": "boolean",
            },
          ],
        },
        "value": Object {
          "kind": "id",
          "name": "Array",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: array expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "elements": Array [
          Object {
            "kind": "string",
            "value": "a",
          },
        ],
        "kind": "array",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "typeParams": Object {
          "kind": "typeParams",
          "params": Array [
            Object {
              "kind": "string",
            },
          ],
        },
        "value": Object {
          "kind": "id",
          "name": "Array",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: array union 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "typeParams": Object {
          "kind": "typeParams",
          "params": Array [
            Object {
              "kind": "union",
              "types": Array [
                Object {
                  "kind": "boolean",
                },
                Object {
                  "kind": "number",
                },
              ],
            },
          ],
        },
        "value": Object {
          "kind": "id",
          "name": "Array",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: arrow function component 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: arrow function expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "async": false,
        "generator": false,
        "id": null,
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "number",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: binary expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "binary",
        "left": Object {
          "kind": "number",
          "value": 3,
        },
        "operator": "+",
        "right": Object {
          "kind": "number",
          "value": 5,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: boolean 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "boolean",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: boolean literal 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "boolean",
        "value": true,
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "boolean",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: class with this expression 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Field",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "number",
          "value": 1,
        },
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: default class export 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "OnboardingModal",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: defined member expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "memberExpression",
        "object": Object {
          "kind": "object",
          "members": Array [
            Object {
              "key": Object {
                "kind": "id",
                "name": "c",
                "type": null,
              },
              "kind": "property",
              "value": Object {
                "async": false,
                "generator": false,
                "id": null,
                "kind": "function",
                "parameters": Array [
                  Object {
                    "kind": "param",
                    "type": Object {
                      "kind": "string",
                    },
                    "value": Object {
                      "kind": "id",
                      "name": "a",
                    },
                  },
                  Object {
                    "kind": "param",
                    "type": Object {
                      "kind": "string",
                    },
                    "value": Object {
                      "kind": "id",
                      "name": "b",
                    },
                  },
                ],
                "returnType": Object {
                  "kind": "number",
                },
              },
            },
          ],
          "referenceIdName": "b",
        },
        "property": Object {
          "kind": "id",
          "name": "c",
          "type": null,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: different React component 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": true,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "FooComponent",
    "type": null,
  },
}
`;

exports[`Flow: exists type annotation 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "async": false,
        "generator": false,
        "id": null,
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "exists",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: exported type alias reference 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "kind": "boolean",
          "referenceIdName": "Foo",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: forwardRef 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: forwardRef callable type arguments 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: forwardRef default export 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: forwardRef default export 2`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: func that is not valid 1`] = `undefined`;

exports[`Flow: function 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "string",
            },
          },
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "number",
            },
          },
        ],
        "returnType": Object {
          "kind": "string",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function component 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: function component with default including spread 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "string",
          "value": "bob",
        },
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
      Object {
        "default": Object {
          "kind": "string",
          "value": "a",
        },
        "key": Object {
          "kind": "id",
          "name": "something",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: function component with default props 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "string",
          "value": "bob",
        },
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: function declaration 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "args": Array [],
        "callee": Object {
          "kind": "id",
          "name": "sayHello",
          "referenceIdName": "sayHello",
          "type": null,
        },
        "kind": "call",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "async": false,
        "generator": false,
        "id": null,
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "number",
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function expression 2`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: function named params 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "string",
            },
          },
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "number",
            },
          },
        ],
        "returnType": Object {
          "kind": "void",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function return type 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "number",
            },
          },
        ],
        "returnType": Object {
          "kind": "void",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function type 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "kind": "id",
          "name": "Function",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function unnamed params 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "string",
            },
          },
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "number",
            },
          },
        ],
        "returnType": Object {
          "kind": "void",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function unnamed params w/ object 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [
          Object {
            "kind": "param",
            "type": null,
            "value": Object {
              "kind": "object",
              "members": Array [
                Object {
                  "key": Object {
                    "kind": "id",
                    "name": "prop",
                  },
                  "kind": "property",
                  "optional": false,
                  "value": Object {
                    "kind": "string",
                  },
                },
              ],
            },
          },
        ],
        "returnType": Object {
          "kind": "void",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: function with defaults not arrow 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "string",
          "value": "bob",
        },
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
      Object {
        "default": Object {
          "kind": "string",
          "value": "a",
        },
        "key": Object {
          "kind": "id",
          "name": "something",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: generic class 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "id",
    "name": "A",
  },
}
`;

exports[`Flow: ignores other components 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: import { type } 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "children",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "importKind": "type",
            "kind": "import",
            "moduleSpecifier": "react",
            "name": "Node",
            "referenceIdName": "Node",
          },
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: imported member expression default 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "memberExpression",
        "object": Object {
          "kind": "id",
          "name": "b",
          "type": null,
        },
        "property": Object {
          "kind": "id",
          "name": "c",
          "type": null,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: imported member expression named 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "memberExpression",
        "object": Object {
          "kind": "id",
          "name": "b",
          "type": null,
        },
        "property": Object {
          "kind": "id",
          "name": "c",
          "type": null,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: imported member expression named alias 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "memberExpression",
        "object": Object {
          "kind": "id",
          "name": "b",
          "type": null,
        },
        "property": Object {
          "kind": "id",
          "name": "c",
          "type": null,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: inline anonymous function component 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: inline arrow function component 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: inline function component 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "name",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: intersection type 1`] = `
Object {
  "kind": "intersection",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "types": Array [
    Object {
      "kind": "generic",
      "value": Object {
        "kind": "object",
        "members": Array [
          Object {
            "key": Object {
              "kind": "id",
              "name": "bar",
            },
            "kind": "property",
            "optional": false,
            "value": Object {
              "kind": "string",
            },
          },
        ],
        "referenceIdName": "BaseProps",
      },
    },
    Object {
      "kind": "object",
      "members": Array [
        Object {
          "key": Object {
            "kind": "id",
            "name": "isDefaultChecked",
          },
          "kind": "property",
          "optional": false,
          "value": Object {
            "kind": "boolean",
          },
        },
      ],
    },
  ],
}
`;

exports[`Flow: maybe 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "arguments": Object {
          "kind": "string",
        },
        "kind": "nullable",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: member expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "memberExpression",
        "object": Object {
          "kind": "id",
          "name": "b",
          "type": null,
        },
        "property": Object {
          "kind": "id",
          "name": "c",
          "type": null,
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: memo 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: memo default export 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: memo wrapping forwardRef 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "SomeComponent",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: memo wrapping forwardRef default export 1`] = `
Object {
  "kind": "generic",
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "ok",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: mixed 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "age",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "mixed",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: nested intersection type with default props 1`] = `
Object {
  "kind": "intersection",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "types": Array [
    Object {
      "kind": "generic",
      "value": Object {
        "kind": "intersection",
        "referenceIdName": "Props",
        "types": Array [
          Object {
            "kind": "generic",
            "value": Object {
              "kind": "object",
              "members": Array [
                Object {
                  "default": Object {
                    "kind": "string",
                    "value": "baz",
                  },
                  "key": Object {
                    "kind": "id",
                    "name": "bar",
                  },
                  "kind": "property",
                  "optional": false,
                  "value": Object {
                    "kind": "string",
                  },
                },
              ],
              "referenceIdName": "BaseProps",
            },
          },
          Object {
            "kind": "object",
            "members": Array [
              Object {
                "key": Object {
                  "kind": "id",
                  "name": "foo",
                },
                "kind": "property",
                "optional": false,
                "value": Object {
                  "kind": "string",
                },
              },
            ],
          },
        ],
      },
    },
    Object {
      "kind": "object",
      "members": Array [
        Object {
          "key": Object {
            "kind": "id",
            "name": "isDefaultChecked",
          },
          "kind": "property",
          "optional": false,
          "value": Object {
            "kind": "boolean",
          },
        },
      ],
    },
  ],
}
`;

exports[`Flow: new expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "args": Array [],
        "callee": Object {
          "kind": "id",
          "name": "Date",
          "type": null,
        },
        "kind": "new",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "kind": "id",
          "name": "Date",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: no React component 1`] = `undefined`;

exports[`Flow: non-standard key 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "string",
        "value": "ab-a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: non-standard key with default 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "number",
        "value": 37,
      },
      "key": Object {
        "kind": "string",
        "value": "ab-a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: null literal 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "null",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": true,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: number 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: numeric literal 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "number",
        "value": 5,
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: optional 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": true,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: recursive type 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "props",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "kind": "id",
            "name": "RecursiveType",
          },
        },
      },
    ],
    "referenceIdName": "RecursiveType",
  },
}
`;

exports[`Flow: spread element  1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "boolean",
        "value": true,
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "boolean",
      },
    },
    Object {
      "default": Object {
        "kind": "boolean",
        "value": false,
      },
      "key": Object {
        "kind": "id",
        "name": "b",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "boolean",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: spread element cannot find 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "object",
        "members": Array [
          Object {
            "kind": "spread",
            "value": Object {
              "importKind": "value",
              "kind": "import",
              "moduleSpecifier": "somewhere",
              "name": "default",
              "referenceIdName": "something",
            },
          },
        ],
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "any",
      },
    },
    Object {
      "default": Object {
        "kind": "boolean",
        "value": false,
      },
      "key": Object {
        "kind": "id",
        "name": "b",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "boolean",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: string 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: string literal 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "string",
        "value": "stringVal",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: tagged template expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "templateExpression",
        "tag": Object {
          "kind": "memberExpression",
          "object": Object {
            "kind": "id",
            "name": "styled",
            "type": null,
          },
          "property": Object {
            "kind": "id",
            "name": "div",
            "type": null,
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "function",
        "parameters": Array [],
        "returnType": Object {
          "kind": "mixed",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: template literal with quasis 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "expressions": Array [
          Object {
            "kind": "id",
            "name": "abcd",
            "type": null,
          },
        ],
        "kind": "templateLiteral",
        "quasis": Array [
          Object {
            "kind": "templateElement",
            "value": Object {
              "cooked": "asdf",
              "raw": "asdf",
            },
          },
          Object {
            "kind": "templateElement",
            "value": Object {
              "cooked": "",
              "raw": "",
            },
          },
        ],
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": true,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "kind": "id",
          "name": "Object",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test defaultProp as JSXElement 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "JSXElement",
        "value": Object {
          "attributes": Array [
            Object {
              "kind": "JSXAttribute",
              "name": Object {
                "kind": "JSXIdentifier",
                "value": "name",
              },
              "value": Object {
                "expression": Object {
                  "kind": "string",
                  "value": "test icon",
                },
                "kind": "JSXExpressionContainer",
              },
            },
          ],
          "kind": "JSXOpeningElement",
          "name": Object {
            "kind": "JSXIdentifier",
            "value": "Icon",
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "importKind": "type",
          "kind": "import",
          "moduleSpecifier": "react",
          "name": "Node",
          "referenceIdName": "Node",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test defaultProp as JSXElement with JSXExpressionContainer 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "JSXElement",
        "value": Object {
          "attributes": Array [
            Object {
              "kind": "JSXAttribute",
              "name": Object {
                "kind": "JSXIdentifier",
                "value": "name",
              },
              "value": Object {
                "expression": Object {
                  "kind": "string",
                  "value": "test icon",
                },
                "kind": "JSXExpressionContainer",
              },
            },
          ],
          "kind": "JSXOpeningElement",
          "name": Object {
            "kind": "JSXIdentifier",
            "value": "Icon",
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "importKind": "type",
          "kind": "import",
          "moduleSpecifier": "react",
          "name": "Node",
          "referenceIdName": "Node",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test defaultProp as JSXElement with member expression 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "JSXElement",
        "value": Object {
          "attributes": Array [
            Object {
              "kind": "JSXAttribute",
              "name": Object {
                "kind": "JSXIdentifier",
                "value": "name",
              },
              "value": Object {
                "expression": Object {
                  "kind": "string",
                  "value": "test icon",
                },
                "kind": "JSXExpressionContainer",
              },
            },
          ],
          "kind": "JSXOpeningElement",
          "name": Object {
            "kind": "JSXMemberExpression",
            "object": Object {
              "kind": "JSXIdentifier",
              "value": "componentObj",
            },
            "property": Object {
              "kind": "JSXIdentifier",
              "value": "Icon",
            },
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "importKind": "type",
          "kind": "import",
          "moduleSpecifier": "react",
          "name": "Node",
          "referenceIdName": "Node",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test defaultProp as JSXElement with multiple props 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "JSXElement",
        "value": Object {
          "attributes": Array [
            Object {
              "kind": "JSXAttribute",
              "name": Object {
                "kind": "JSXIdentifier",
                "value": "name",
              },
              "value": Object {
                "kind": "string",
                "value": "test icon",
              },
            },
            Object {
              "kind": "JSXAttribute",
              "name": Object {
                "kind": "JSXIdentifier",
                "value": "iconType",
              },
              "value": Object {
                "kind": "string",
                "value": "avatar",
              },
            },
          ],
          "kind": "JSXOpeningElement",
          "name": Object {
            "kind": "JSXIdentifier",
            "value": "Icon",
          },
        },
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "value": Object {
          "importKind": "type",
          "kind": "import",
          "moduleSpecifier": "react",
          "name": "Node",
          "referenceIdName": "Node",
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: test get defaultProps 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "kind": "string",
        "value": "a",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "string",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: type 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "foo",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "number",
        },
      },
      Object {
        "key": Object {
          "kind": "id",
          "name": "bar",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "ComponentProps",
  },
}
`;

exports[`Flow: type 2`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "intersection",
        "types": Array [
          Object {
            "kind": "number",
          },
          Object {
            "kind": "string",
          },
        ],
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: type alias declaration - 1 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "a",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "kind": "union",
            "referenceIdName": "ReactElement",
            "types": Array [
              Object {
                "kind": "generic",
                "typeParams": Object {
                  "kind": "typeParams",
                  "params": Array [
                    Object {
                      "kind": "any",
                    },
                  ],
                },
                "value": Object {
                  "kind": "id",
                  "name": "Element",
                },
              },
              Object {
                "kind": "arrayType",
                "type": Object {
                  "kind": "generic",
                  "typeParams": Object {
                    "kind": "typeParams",
                    "params": Array [
                      Object {
                        "kind": "any",
                      },
                    ],
                  },
                  "value": Object {
                    "kind": "id",
                    "name": "Element",
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: type comments 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "a",
        },
        "kind": "property",
        "leadingComments": Array [
          Object {
            "raw": " Type comment for a ",
            "type": "commentBlock",
            "value": "Type comment for a",
          },
        ],
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: type identifier 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "children",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "generic",
          "value": Object {
            "kind": "id",
            "name": "Node",
          },
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: type parameter declaration 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "generic",
        "typeParams": Object {
          "kind": "typeParams",
          "params": Array [
            Object {
              "kind": "string",
            },
          ],
        },
        "value": Object {
          "kind": "function",
          "parameters": Array [],
          "referenceIdName": "Foo",
          "returnType": Object {
            "kind": "generic",
            "value": Object {
              "kind": "typeParamsDeclaration",
              "params": Array [
                Object {
                  "kind": "typeParam",
                  "name": "T",
                },
              ],
              "referenceIdName": "T",
            },
          },
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: typeof statements 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "typeof",
        "name": "one",
        "type": Object {
          "kind": "generic",
          "value": Object {
            "kind": "number",
            "referenceIdName": "one",
            "value": 1,
          },
        },
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: unary operator 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "default": Object {
        "argument": Object {
          "kind": "number",
          "value": 1,
        },
        "kind": "unary",
        "operator": "-",
      },
      "key": Object {
        "kind": "id",
        "name": "a",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "number",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: union 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "union",
        "types": Array [
          Object {
            "kind": "boolean",
          },
          Object {
            "kind": "number",
          },
        ],
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: union literals 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "age",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "union",
        "types": Array [
          Object {
            "kind": "string",
            "value": "25",
          },
          Object {
            "kind": "number",
            "value": 30,
          },
        ],
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: void 1`] = `
Object {
  "kind": "object",
  "members": Array [
    Object {
      "key": Object {
        "kind": "id",
        "name": "foo",
      },
      "kind": "property",
      "optional": false,
      "value": Object {
        "kind": "void",
      },
    },
  ],
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
}
`;

exports[`Flow: with $Exact spread in type annotation and default props 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "string",
          "value": "abc",
        },
        "key": Object {
          "kind": "id",
          "name": "foo",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
      Object {
        "key": Object {
          "kind": "id",
          "name": "isDefaultChecked",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: with generic spread in type annotation and default props 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "kind": "spread",
        "value": Object {
          "kind": "generic",
          "typeParams": Object {
            "kind": "typeParams",
            "params": Array [
              Object {
                "kind": "generic",
                "value": Object {
                  "kind": "object",
                  "members": Array [
                    Object {
                      "key": Object {
                        "kind": "id",
                        "name": "foo",
                      },
                      "kind": "property",
                      "optional": false,
                      "value": Object {
                        "kind": "string",
                      },
                    },
                  ],
                  "referenceIdName": "BaseProps",
                },
              },
              Object {
                "kind": "generic",
                "value": Object {
                  "kind": "id",
                  "name": "OtherProps",
                },
              },
            ],
          },
          "value": Object {
            "kind": "id",
            "name": "$Diff",
          },
        },
      },
      Object {
        "key": Object {
          "kind": "id",
          "name": "isDefaultChecked",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: with spread in type annotation 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "key": Object {
          "kind": "id",
          "name": "foo",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
      Object {
        "key": Object {
          "kind": "id",
          "name": "isDefaultChecked",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;

exports[`Flow: with spread in type annotation and default props 1`] = `
Object {
  "kind": "generic",
  "name": Object {
    "kind": "id",
    "name": "Component",
    "type": null,
  },
  "value": Object {
    "kind": "object",
    "members": Array [
      Object {
        "default": Object {
          "kind": "string",
          "value": "abc",
        },
        "key": Object {
          "kind": "id",
          "name": "foo",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "string",
        },
      },
      Object {
        "key": Object {
          "kind": "id",
          "name": "isDefaultChecked",
        },
        "kind": "property",
        "optional": false,
        "value": Object {
          "kind": "boolean",
        },
      },
    ],
    "referenceIdName": "Props",
  },
}
`;
